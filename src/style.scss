@use './styleComponents/textSetting.scss' as *;
@use './styleComponents/all.scss';


.container{
    position: relative;
    min-height: 100vh;
  background-color: #3d4f72;
    background-size: cover;
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
   
    &::after{
        position: absolute;
        content: "";
        inset: 0;
        background-color: #000000;
        clip-path: polygon(100% 0, 0% 100%, 100% 100%);
    }
    & .title{
        @include textSetting(13vw);
        top: -10vh;
        &::first-letter{
            font-size: 18vw;
        }
    }
    & .subtitle{
        @include textSetting(2.5vw);
        letter-spacing: 0.5vw;
        top: -15vh;
        margin-inline-start: 20px;
    }
    & .explain-area{
        display: flex;
        z-index: 1;
       top: -10vh;
       position: relative;
       justify-content: space-evenly;
        & .explain{
           width: 30%;
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 3px;
            margin-inline-end: 20px;
            & img{
                width: 100%;
                height: 30vh;
                margin-block-end: 30px;
            }
            & .step{
                font-size: 1.5vw;
                &::before{
                    counter-increment: my-counter;
                    content: ""counter(my-counter)".";
                }
            }
        }
    }
    & .input-area{
        position: relative;
        z-index: 1;
        margin-inline-start: 20px;
        margin-block-start: 20px;
        top: -10vh;
      & *{
        margin-inline-end: 0.7vw ;
        font-size: 1.5vw;
        background-color: transparent;
      }
      & .label{
        letter-spacing: 0.2vw;
      }
      & .input{
        border: 1px solid #d4ebf8;
        accent-color: #d4ebf8;
      }
      & .button{
        border: 1px solid #d4ebf8;
        padding: 0px 5px;
        transition: 0.5s;
        cursor: pointer;
        &:hover{
           transform: translateX(1vw);
        }
      }
    }
}